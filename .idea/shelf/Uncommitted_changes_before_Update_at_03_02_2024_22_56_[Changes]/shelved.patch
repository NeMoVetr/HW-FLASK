Index: myproject/myapp/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/myproject/myapp/admin.py b/myproject/myapp/admin.py
deleted file mode 100644
--- a/myproject/myapp/admin.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,3 +0,0 @@
-from django.contrib import admin
-
-# Register your models here.
Index: myproject/myapp/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/myproject/myapp/views.py b/myproject/myapp/views.py
deleted file mode 100644
--- a/myproject/myapp/views.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,28 +0,0 @@
-import logging
-
-from django.http import HttpResponse
-
-# Create your views here.
-
-logger = logging.getLogger(__name__)
-
-
-def index(request):
-    html = """
-    <h1>Это главная страница моего сайта</h1>
-    <p>Привет мир!</p>
-    """
-
-    logger.info("Страницу 'Главаня' кто-то посетил (-_-)")
-    return HttpResponse(html)
-
-
-def about(request):
-    html = """
-    <h1>Это страница расскажет вам обо мне</h1>
-    <p>Здесь что-то написано обо мне и очень интересно излаженно ))))</p>
-    """
-
-    logger.info("Страницу 'О себе' кто-то посетил (-_-)")
-
-    return HttpResponse(html)
Index: myproject/myapp/apps.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/myproject/myapp/apps.py b/myproject/myapp/apps.py
deleted file mode 100644
--- a/myproject/myapp/apps.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,6 +0,0 @@
-from django.apps import AppConfig
-
-
-class MyappConfig(AppConfig):
-    default_auto_field = 'django.db.models.BigAutoField'
-    name = 'myapp'
Index: myproject/myapp/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/myproject/myapp/urls.py b/myproject/myapp/urls.py
deleted file mode 100644
--- a/myproject/myapp/urls.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,7 +0,0 @@
-from django.urls import path
-from . import views
-
-urlpatterns = [
-    path('', views.index, name='index'),
-    path('about/', views.about, name='about'),
-]
\ No newline at end of file
Index: myproject/log/django.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/myproject/log/django.log b/myproject/log/django.log
deleted file mode 100644
--- a/myproject/log/django.log	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,10 +0,0 @@
-INFO 2024-01-30 23:44:41,417 autoreload 20064 18620 Watching for file changes with StatReloader
-INFO 2024-01-30 23:44:45,393 views 20064 10656 �������� '�������' ���-�� ������� (-_-)
-INFO 2024-01-30 23:44:45,393 basehttp 20064 10656 "GET / HTTP/1.1" 200 111
-WARNING 2024-01-30 23:44:45,526 log 20064 10656 Not Found: /favicon.ico
-WARNING 2024-01-30 23:44:45,527 basehttp 20064 10656 "GET /favicon.ico HTTP/1.1" 404 2441
-WARNING 2024-01-30 23:45:05,618 log 20064 10656 Not Found: /docs
-WARNING 2024-01-30 23:45:05,618 basehttp 20064 10656 "GET /docs HTTP/1.1" 404 2420
-INFO 2024-01-30 23:45:06,738 basehttp 20064 10656 "GET /about HTTP/1.1" 301 0
-INFO 2024-01-30 23:45:06,765 views 20064 708 �������� '� ����' ���-�� ������� (-_-)
-INFO 2024-01-30 23:45:06,766 basehttp 20064 708 "GET /about/ HTTP/1.1" 200 204
Index: templates/shop.html
===================================================================
diff --git a/templates/shop.html b/templates/shop.html
deleted file mode 100644
--- a/templates/shop.html	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,26 +0,0 @@
-<!DOCTYPE html>
-<html lang="ru">
-<head>
-    <meta charset="UTF-8">
-    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
-    <title>Интернет магазин</title>
-</head>
-<body>
-    <h1>Интернет магазин</h1>
-
-    {% if user_table %}
-        <h2>Пользователи:</h2>
-        {{ user_table | safe }}
-    {% endif %}
-
-    {% if product_table %}
-        <h2>Товары:</h2>
-        {{ product_table | safe }}
-    {% endif %}
-
-    {% if order_table %}
-        <h2>Заказы:</h2>
-        {{ order_table | safe }}
-    {% endif %}
-</body>
-</html>
\ No newline at end of file
Index: myproject/manage.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/myproject/manage.py b/myproject/manage.py
deleted file mode 100644
--- a/myproject/manage.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,22 +0,0 @@
-#!/usr/bin/env python
-"""Django's command-line utility for administrative tasks."""
-import os
-import sys
-
-
-def main():
-    """Run administrative tasks."""
-    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')
-    try:
-        from django.core.management import execute_from_command_line
-    except ImportError as exc:
-        raise ImportError(
-            "Couldn't import Django. Are you sure it's installed and "
-            "available on your PYTHONPATH environment variable? Did you "
-            "forget to activate a virtual environment?"
-        ) from exc
-    execute_from_command_line(sys.argv)
-
-
-if __name__ == '__main__':
-    main()
Index: main6.py
===================================================================
diff --git a/main6.py b/main6.py
deleted file mode 100644
--- a/main6.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,215 +0,0 @@
-from datetime import datetime
-
-import pandas as pd
-from fastapi import FastAPI, Request
-from fastapi.responses import HTMLResponse
-from fastapi.templating import Jinja2Templates
-from pydantic import BaseModel, Field
-from sqlalchemy import create_engine, Table, Column, Integer, String, ForeignKey, DateTime, MetaData
-
-app = FastAPI()
-
-DATABASE_URL = "sqlite:///./shop.bd"
-
-engine = create_engine(DATABASE_URL)
-
-metadata = MetaData()
-
-templates = Jinja2Templates(directory="templates")
-
-users = Table("users",
-              metadata,
-              Column("id", Integer, primary_key=True),
-              Column("first_name", String(50)),
-              Column("last_name", String(50)),
-              Column("email", String(120)),
-              Column("password", String(50)),
-              )
-
-products = Table(
-    "products",
-    metadata,
-    Column("id", Integer, primary_key=True),
-    Column("name", String(100)),
-    Column("description", String(255)),
-    Column("price", Integer),
-)
-
-orders = Table(
-    "orders",
-    metadata,
-    Column("id", Integer, primary_key=True),
-    Column("user_id", Integer, ForeignKey("users.id")),
-    Column("product_id", Integer, ForeignKey("products.id")),
-    Column("date_ordered", DateTime, default=datetime.utcnow()),
-    Column("status", String, default="Pending"),
-)
-
-
-class User(BaseModel):
-    id: int
-    first_name: str = Field(max_length=50)
-    last_name: str = Field(max_length=50)
-    email: str = Field(max_length=120)
-    password: str = Field(max_length=50)
-
-
-class Product(BaseModel):
-    id: int
-    name: str = Field(max_length=100)
-    description: str = Field(max_length=255)
-    price: float
-
-
-class Order(BaseModel):
-    id: int
-    user_id: int
-    product_id: int
-    date_ordered: datetime
-    status: str
-
-
-metadata.create_all(engine)
-
-
-@app.post("/users/", response_model=User)
-async def create_user(user: User):
-    print("user.model_dump():", user.model_dump())
-    with engine.connect() as connection:
-        query = users.insert().values(**user.model_dump())
-        connection.execute(query)
-
-        print("user:", user)
-        return user
-
-
-@app.get("/users/")
-async def read_users(request: Request):
-    with engine.connect() as connection:
-        query = users.select()
-        print(query)
-        users_result = connection.execute(query).fetchall()
-        print(f"Users fetched: {users_result}")
-        user_table = pd.DataFrame(users_result,
-                                  columns=["id", "first_name", "last_name", "email", "password"]).to_html()
-        return HTMLResponse(content=templates.get_template("shop.html").render(request=request, user_table=user_table))
-
-
-@app.get("/users/{user_id}", response_model=User)
-async def read_user(user_id: int):
-    with engine.connect() as connection:
-        query = users.select().where(users.c.id == user_id)
-        user_result = connection.execute(query).fetchone()
-
-        user_model_dump = User(**user_result.model_dump())
-        return user_model_dump
-
-
-@app.put("/users/{user_id}", response_model=User)
-async def update_user(user_id: int, user: User):
-    with engine.connect() as connection:
-        query = users.update().where(users.c.id == user_id).values(**user.model_dump())
-        connection.execute(query)
-        return user
-
-
-@app.delete("/users/{user_id}", response_model=User)
-def delete_user(user_id: int):
-    with engine.connect() as connection:
-        query = users.delete().where(users.c.id == user_id)
-        user_result = connection.execute(query).fetchone()
-        user_model_dump = User(**user_result.model_dump())
-        return user_model_dump
-
-
-@app.post("/products/", response_model=Product)
-async def create_product(product: Product):
-    with engine.connect() as connection:
-        query = products.insert().values(**product.model_dump())
-        result = connection.execute(query)
-        product_id = result.inserted_primary_key[0]
-        return {**product.model_dump(), "id": product_id}
-
-
-@app.get("/products/")
-def read_products(request: Request):
-    with engine.connect() as connection:
-        query = products.select()
-        products_result = connection.execute(query).fetchall()
-        product_table = pd.DataFrame(products_result, columns=["id", "name", "description", "price"]).to_html()
-        return HTMLResponse(
-            content=templates.get_template("shop.html").render(request=request, product_table=product_table))
-
-
-@app.get("/products/{product_id}", response_model=Product)
-def read_product(product_id: int):
-    with engine.connect() as connection:
-        query = products.select().where(products.c.id == product_id)
-        product_result = connection.execute(query).fetchone()
-
-        product_model_dump = Product(**product_result.model_dump())
-        return product_model_dump
-
-
-@app.put("/products/{product_id}", response_model=Product)
-def update_product(product_id: int, product: Product):
-    with engine.connect() as connection:
-        query = products.update().where(products.c.id == product_id).values(**product.model_dump())
-        connection.execute(query)
-        return product
-
-
-@app.delete("/products/{product_id}", response_model=Product)
-def delete_product(product_id: int):
-    with engine.connect() as connection:
-        query = products.delete().where(products.c.id == product_id)
-        product_result = connection.execute(query).fetchone()
-        product_model_dump = Product(**product_result.model_dump())
-        return product_model_dump
-
-
-@app.post("/orders/", response_model=Order)
-def create_order(order: Order):
-    with engine.connect() as connection:
-        query = orders.insert().values(**order.model_dump(), order_date=datetime.utcnow())
-        result = connection.execute(query)
-        order_id = result.inserted_primary_key[0]
-        return {**order.model_dump(), "id": order_id, "order_date": datetime.utcnow()}
-
-
-@app.get("/orders/")
-def read_orders(request: Request):
-    with engine.connect() as connection:
-        query = orders.select()
-        orders_result = connection.execute(query).fetchall()
-        order_table = pd.DataFrame(orders_result,
-                                   columns=["id", "user_id", "product_id", "order_date", "status"]).to_html()
-        return HTMLResponse(
-            content=templates.get_template("shop.html").render(request=request, order_table=order_table))
-
-
-@app.get("/orders/{order_id}", response_model=Order)
-def read_order(order_id: int):
-    with engine.connect() as connection:
-        query = orders.select().where(orders.c.id == order_id)
-        order_result = connection.execute(query).fetchone()
-        order_model_dump = Order(**order_result.model_dump())
-        return order_model_dump
-
-
-@app.put("/orders/{order_id}", response_model=Order)
-def update_order(order_id: int, order: Order):
-    with engine.connect() as connection:
-        query = orders.update().where(orders.c.id == order_id).values(**order.model_dump())
-        connection.execute(query)
-        return order
-
-
-@app.delete("/orders/{order_id}", response_model=Order)
-def delete_order(order_id: int):
-    with engine.connect() as connection:
-        query = orders.delete().where(orders.c.id == order_id)
-        order_result = connection.execute(query).fetchone()
-        order_model_dump = Order(**order_result.model_dump())
-        return order_model_dump
-
Index: myproject/myapp/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/myproject/myapp/tests.py b/myproject/myapp/tests.py
deleted file mode 100644
--- a/myproject/myapp/tests.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
Index: templates/jacket.html
===================================================================
diff --git a/templates/jacket.html b/templates/jacket.html
deleted file mode 100644
--- a/templates/jacket.html	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,10 +0,0 @@
-{% extends 'base.html' %}
-{% block title %}
-    {{ super() }}
-{% endblock %}
-
-{% block content %}
-    <section>
-        <h2>{{ name }}</h2>
-    </section>
-{% endblock %}
Index: myproject/myproject/asgi.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/myproject/myproject/asgi.py b/myproject/myproject/asgi.py
deleted file mode 100644
--- a/myproject/myproject/asgi.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,16 +0,0 @@
-"""
-ASGI config for myproject project.
-
-It exposes the ASGI callable as a module-level variable named ``application``.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/4.2/howto/deployment/asgi/
-"""
-
-import os
-
-from django.core.asgi import get_asgi_application
-
-os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')
-
-application = get_asgi_application()
Index: templates/base.html
===================================================================
diff --git a/templates/base.html b/templates/base.html
deleted file mode 100644
--- a/templates/base.html	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,30 +0,0 @@
-<!DOCTYPE html>
-<html lang="ru">
-<head>
-    <meta charset="UTF-8">
-    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
-    <title>Регистрация в базу данных</title>
-</head>
-<body>
-    <h1>Регистрация</h1>
-    <form method="post" action="/">
-        {{ form.hidden_tag() }}
-        <p><strong>Имя:</strong> {{ form.first_name(size=20) }}</p>
-        <p><strong>Фамилия:</strong> {{ form.last_name(size=20) }}</p>
-        <p><strong>Email:</strong> {{ form.email(size=20) }}</p>
-        <p><strong>Пароль:</strong> {{ form.password(size=20) }}</p>
-        <p>{{ form.submit() }}</p>
-    </form>
-
-    <h2>Зарегистрированные пользователи</h2>
-    <ul>
-        {% for user in users %}
-            <li class="col-12 col-md-6"><strong>Имя пользователя:</strong> {{ user.first_name }} <strong>Фамилия пользователя:</strong> {{ user.last_name }} <strong>Email пользователя:</strong> {{ user.email }}</li>
-        {% endfor %}
-    </ul>
-
-    <footer>
-        <p>Все права защищены &copy;</p>
-    </footer>
-</body>
-</html>
Index: templates/greet.html
===================================================================
diff --git a/templates/greet.html b/templates/greet.html
deleted file mode 100644
--- a/templates/greet.html	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,17 +0,0 @@
-<!DOCTYPE html>
-<html lang="ru">
-<head>
-    <meta charset="UTF-8">
-    <meta name="viewport" content="width=device-width, initial-scale=1.0">
-</head>
-<body>
-    <h1>
-        Приветствую тебя, {{ username }}
-        <br>
-        Вы ввели следующий email: {{ email }}
-    </h1>
-    <form action="/delite" method="post">
-        <button type = "submit"> Выйти</button>
-    </form>
-</body>
-</html>
\ No newline at end of file
Index: templates/index.html
===================================================================
diff --git a/templates/index.html b/templates/index.html
deleted file mode 100644
--- a/templates/index.html	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,18 +0,0 @@
-<!DOCTYPE html>
-<html lang="ru">
-<head>
-    <meta charset="UTF-8">
-    <meta name="viewport" content="width=device-width, initial-scale=1.0">
-</head>
-<body>
-    <form action="set_cookie" method="post">
-        <label for="username"> Введите имя: </label>
-        <input type="text" id = "username" name = "username" required>
-        <br>
-        <label for="email"> Введите email: </label>
-        <input type="text" id = "email" name = "email" required>
-        <button type="sumbit"> Отправить данные</button>
-
-    </form>
-</body>
-</html>
\ No newline at end of file
Index: myproject/myapp/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/myproject/myapp/models.py b/myproject/myapp/models.py
deleted file mode 100644
--- a/myproject/myapp/models.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,3 +0,0 @@
-from django.db import models
-
-# Create your models here.
Index: myproject/myproject/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/myproject/myproject/settings.py b/myproject/myproject/settings.py
deleted file mode 100644
--- a/myproject/myproject/settings.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,159 +0,0 @@
-"""
-Django settings for myproject project.
-
-Generated by 'django-admin startproject' using Django 4.2.9.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/4.2/topics/settings/
-
-For the full list of settings and their values, see
-https://docs.djangoproject.com/en/4.2/ref/settings/
-"""
-
-from pathlib import Path
-
-# Build paths inside the project like this: BASE_DIR / 'subdir'.
-BASE_DIR = Path(__file__).resolve().parent.parent
-
-
-# Quick-start development settings - unsuitable for production
-# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/
-
-# SECURITY WARNING: keep the secret key used in production secret!
-SECRET_KEY = 'django-insecure-t(7x_+ac4)f#6c1cxnu98g0m!*y)*+-((stc77vf&fd%y@9mp0'
-
-# SECURITY WARNING: don't run with debug turned on in production!
-DEBUG = True
-
-ALLOWED_HOSTS = []
-
-
-LOGGING = {
-    'version': 1,
-    'disable_existing_loggers': False,
-    'formatters': {
-        'verbose': {
-            'format': '{levelname} {asctime} {module} {process} {thread} {message}',
-            'style': '{',
-        },
-        'simple': {
-            'format': '%(levelname)s %(message)s'
-        },
-    },
-    'handlers': {
-        'console': {
-            'class': 'logging.StreamHandler',
-            'formatter': 'verbose', # добавлен параметр formatter
-            },
-        'file': {
-            'class': 'logging.FileHandler',
-            'filename': './log/django.log',
-            'formatter': 'verbose', # добавлен параметр formatter
-            },
-    },
-    'loggers': {
-        'django': {
-            'handlers': ['console', 'file'],
-            'level': 'INFO',
-        },
-        'myapp': {
-            'handlers': ['console', 'file'],
-            'level': 'DEBUG',
-            'propagate': True,
-        },
-    }
-}
-
-# Application definition
-
-INSTALLED_APPS = [
-    'django.contrib.admin',
-    'django.contrib.auth',
-    'django.contrib.contenttypes',
-    'django.contrib.sessions',
-    'django.contrib.messages',
-    'django.contrib.staticfiles',
-]
-
-MIDDLEWARE = [
-    'django.middleware.security.SecurityMiddleware',
-    'django.contrib.sessions.middleware.SessionMiddleware',
-    'django.middleware.common.CommonMiddleware',
-    'django.middleware.csrf.CsrfViewMiddleware',
-    'django.contrib.auth.middleware.AuthenticationMiddleware',
-    'django.contrib.messages.middleware.MessageMiddleware',
-    'django.middleware.clickjacking.XFrameOptionsMiddleware',
-]
-
-ROOT_URLCONF = 'myproject.urls'
-
-TEMPLATES = [
-    {
-        'BACKEND': 'django.template.backends.django.DjangoTemplates',
-        'DIRS': [],
-        'APP_DIRS': True,
-        'OPTIONS': {
-            'context_processors': [
-                'django.template.context_processors.debug',
-                'django.template.context_processors.request',
-                'django.contrib.auth.context_processors.auth',
-                'django.contrib.messages.context_processors.messages',
-            ],
-        },
-    },
-]
-
-WSGI_APPLICATION = 'myproject.wsgi.application'
-
-
-# Database
-# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
-
-DATABASES = {
-    'default': {
-        'ENGINE': 'django.db.backends.sqlite3',
-        'NAME': BASE_DIR / 'db.sqlite3',
-    }
-}
-
-
-# Password validation
-# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
-
-AUTH_PASSWORD_VALIDATORS = [
-    {
-        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
-    },
-]
-
-
-# Internationalization
-# https://docs.djangoproject.com/en/4.2/topics/i18n/
-
-LANGUAGE_CODE = 'en-us'
-
-TIME_ZONE = 'UTC'
-
-USE_I18N = True
-
-USE_TZ = True
-
-
-# Static files (CSS, JavaScript, Images)
-# https://docs.djangoproject.com/en/4.2/howto/static-files/
-
-STATIC_URL = 'static/'
-
-# Default primary key field type
-# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
-
-DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
Index: myproject/myproject/wsgi.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/myproject/myproject/wsgi.py b/myproject/myproject/wsgi.py
deleted file mode 100644
--- a/myproject/myproject/wsgi.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,16 +0,0 @@
-"""
-WSGI config for myproject project.
-
-It exposes the WSGI callable as a module-level variable named ``application``.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/4.2/howto/deployment/wsgi/
-"""
-
-import os
-
-from django.core.wsgi import get_wsgi_application
-
-os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')
-
-application = get_wsgi_application()
Index: templates/category.html
===================================================================
diff --git a/templates/category.html b/templates/category.html
deleted file mode 100644
--- a/templates/category.html	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,14 +0,0 @@
-{% extends 'base.html' %}
-
-{% block title %}
-    {{ super() }}
-{% endblock %}
-
-{% block content %}
-    <section>
-        <h2>{{ name }}</h2>
-        {% if name == "Одежда" %}
-            <a href="/jacket">Куртка</a>
-        {% endif %}
-    </section>
-{% endblock %}
Index: main.py
===================================================================
diff --git a/main.py b/main.py
deleted file mode 100644
--- a/main.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,27 +0,0 @@
-from flask import Flask, render_template
-
-app = Flask(__name__)
-
-
-@app.route('/')
-def base():
-    return render_template('base.html')
-
-
-@app.route('/clothing')
-def clothing():
-    return render_template('category.html', name='Одежда')
-
-
-@app.route('/shoes')
-def shoes():
-    return render_template('category.html', name='Обувь')
-
-
-@app.route('/jacket')
-def jacket():
-    return render_template('jacket.html', name='Куртка')
-
-
-if __name__ == '__main__':
-    app.run(debug=True)
Index: myproject/myproject/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/myproject/myproject/urls.py b/myproject/myproject/urls.py
deleted file mode 100644
--- a/myproject/myproject/urls.py	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
+++ /dev/null	(revision a3e1051440baa72ff8500547652d09363dd9b28c)
@@ -1,23 +0,0 @@
-"""
-URL configuration for myproject project.
-
-The `urlpatterns` list routes URLs to views. For more information please see:
-    https://docs.djangoproject.com/en/4.2/topics/http/urls/
-Examples:
-Function views
-    1. Add an import:  from my_app import views
-    2. Add a URL to urlpatterns:  path('', views.home, name='home')
-Class-based views
-    1. Add an import:  from other_app.views import Home
-    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
-Including another URLconf
-    1. Import the include() function: from django.urls import include, path
-    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
-"""
-from django.contrib import admin
-from django.urls import include, path
-
-urlpatterns = [
-    path('admin/', admin.site.urls),
-    path('', include('myapp.urls')),
-]
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1703539167820)
+++ b/.idea/modules.xml	(date 1703539167820)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/HW-FLASK.iml" filepath="$PROJECT_DIR$/.idea/HW-FLASK.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1703539167817)
+++ b/.idea/vcs.xml	(date 1703539167817)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(date 1703539167813)
+++ b/.idea/inspectionProfiles/profiles_settings.xml	(date 1703539167813)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1703539167810)
+++ b/.idea/misc.xml	(date 1703539167810)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9 (pythonProject)" project-jdk-type="Python SDK" />
+  <component name="PyCharmProfessionalAdvertiser">
+    <option name="shown" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	(date 1703539167806)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1703539167806)
@@ -0,0 +1,14 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="PyUnresolvedReferencesInspection" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="ignoredIdentifiers">
+        <list>
+          <option value="float.append" />
+          <option value="set.unity" />
+          <option value="bn_search.Matrix.__getitem__" />
+        </list>
+      </option>
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: .idea/HW-FLASK.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/HW-FLASK.iml b/.idea/HW-FLASK.iml
new file mode 100644
--- /dev/null	(date 1703539167802)
+++ b/.idea/HW-FLASK.iml	(date 1703539167802)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/dbnavigator.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dbnavigator.xml b/.idea/dbnavigator.xml
new file mode 100644
--- /dev/null	(date 1705528925857)
+++ b/.idea/dbnavigator.xml	(date 1705528925857)
@@ -0,0 +1,402 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DBNavigator.Project.DatabaseFileManager">
+    <open-files />
+  </component>
+  <component name="DBNavigator.Project.Settings">
+    <connections />
+    <browser-settings>
+      <general>
+        <display-mode value="TABBED" />
+        <navigation-history-size value="100" />
+        <show-object-details value="false" />
+      </general>
+      <filters>
+        <object-type-filter>
+          <object-type name="SCHEMA" enabled="true" />
+          <object-type name="USER" enabled="true" />
+          <object-type name="ROLE" enabled="true" />
+          <object-type name="PRIVILEGE" enabled="true" />
+          <object-type name="CHARSET" enabled="true" />
+          <object-type name="TABLE" enabled="true" />
+          <object-type name="VIEW" enabled="true" />
+          <object-type name="MATERIALIZED_VIEW" enabled="true" />
+          <object-type name="NESTED_TABLE" enabled="true" />
+          <object-type name="COLUMN" enabled="true" />
+          <object-type name="INDEX" enabled="true" />
+          <object-type name="CONSTRAINT" enabled="true" />
+          <object-type name="DATASET_TRIGGER" enabled="true" />
+          <object-type name="DATABASE_TRIGGER" enabled="true" />
+          <object-type name="SYNONYM" enabled="true" />
+          <object-type name="SEQUENCE" enabled="true" />
+          <object-type name="PROCEDURE" enabled="true" />
+          <object-type name="FUNCTION" enabled="true" />
+          <object-type name="PACKAGE" enabled="true" />
+          <object-type name="TYPE" enabled="true" />
+          <object-type name="TYPE_ATTRIBUTE" enabled="true" />
+          <object-type name="ARGUMENT" enabled="true" />
+          <object-type name="DIMENSION" enabled="true" />
+          <object-type name="CLUSTER" enabled="true" />
+          <object-type name="DBLINK" enabled="true" />
+        </object-type-filter>
+      </filters>
+      <sorting>
+        <object-type name="COLUMN" sorting-type="NAME" />
+        <object-type name="FUNCTION" sorting-type="NAME" />
+        <object-type name="PROCEDURE" sorting-type="NAME" />
+        <object-type name="ARGUMENT" sorting-type="POSITION" />
+        <object-type name="TYPE ATTRIBUTE" sorting-type="POSITION" />
+      </sorting>
+      <default-editors>
+        <object-type name="VIEW" editor-type="SELECTION" />
+        <object-type name="PACKAGE" editor-type="SELECTION" />
+        <object-type name="TYPE" editor-type="SELECTION" />
+      </default-editors>
+    </browser-settings>
+    <navigation-settings>
+      <lookup-filters>
+        <lookup-objects>
+          <object-type name="SCHEMA" enabled="true" />
+          <object-type name="USER" enabled="false" />
+          <object-type name="ROLE" enabled="false" />
+          <object-type name="PRIVILEGE" enabled="false" />
+          <object-type name="CHARSET" enabled="false" />
+          <object-type name="TABLE" enabled="true" />
+          <object-type name="VIEW" enabled="true" />
+          <object-type name="MATERIALIZED VIEW" enabled="true" />
+          <object-type name="INDEX" enabled="true" />
+          <object-type name="CONSTRAINT" enabled="true" />
+          <object-type name="DATASET TRIGGER" enabled="true" />
+          <object-type name="DATABASE TRIGGER" enabled="true" />
+          <object-type name="SYNONYM" enabled="false" />
+          <object-type name="SEQUENCE" enabled="true" />
+          <object-type name="PROCEDURE" enabled="true" />
+          <object-type name="FUNCTION" enabled="true" />
+          <object-type name="PACKAGE" enabled="true" />
+          <object-type name="TYPE" enabled="true" />
+          <object-type name="DIMENSION" enabled="false" />
+          <object-type name="CLUSTER" enabled="false" />
+          <object-type name="DBLINK" enabled="true" />
+        </lookup-objects>
+        <force-database-load value="false" />
+        <prompt-connection-selection value="true" />
+        <prompt-schema-selection value="true" />
+      </lookup-filters>
+    </navigation-settings>
+    <dataset-grid-settings>
+      <general>
+        <enable-zooming value="true" />
+        <enable-column-tooltip value="true" />
+      </general>
+      <sorting>
+        <nulls-first value="true" />
+        <max-sorting-columns value="4" />
+      </sorting>
+      <audit-columns>
+        <column-names value="" />
+        <visible value="true" />
+        <editable value="false" />
+      </audit-columns>
+    </dataset-grid-settings>
+    <dataset-editor-settings>
+      <text-editor-popup>
+        <active value="false" />
+        <active-if-empty value="false" />
+        <data-length-threshold value="100" />
+        <popup-delay value="1000" />
+      </text-editor-popup>
+      <values-actions-popup>
+        <show-popup-button value="true" />
+        <element-count-threshold value="1000" />
+        <data-length-threshold value="250" />
+      </values-actions-popup>
+      <general>
+        <fetch-block-size value="100" />
+        <fetch-timeout value="30" />
+        <trim-whitespaces value="true" />
+        <convert-empty-strings-to-null value="true" />
+        <select-content-on-cell-edit value="true" />
+        <large-value-preview-active value="true" />
+      </general>
+      <filters>
+        <prompt-filter-dialog value="true" />
+        <default-filter-type value="BASIC" />
+      </filters>
+      <qualified-text-editor text-length-threshold="300">
+        <content-types>
+          <content-type name="Text" enabled="true" />
+          <content-type name="Properties" enabled="true" />
+          <content-type name="XML" enabled="true" />
+          <content-type name="DTD" enabled="true" />
+          <content-type name="HTML" enabled="true" />
+          <content-type name="XHTML" enabled="true" />
+          <content-type name="SQL" enabled="true" />
+          <content-type name="PL/SQL" enabled="true" />
+          <content-type name="JSON" enabled="true" />
+          <content-type name="JSON5" enabled="true" />
+          <content-type name="YAML" enabled="true" />
+        </content-types>
+      </qualified-text-editor>
+      <record-navigation>
+        <navigation-target value="VIEWER" />
+      </record-navigation>
+    </dataset-editor-settings>
+    <code-editor-settings>
+      <general>
+        <show-object-navigation-gutter value="false" />
+        <show-spec-declaration-navigation-gutter value="true" />
+        <enable-spellchecking value="true" />
+        <enable-reference-spellchecking value="false" />
+      </general>
+      <confirmations>
+        <save-changes value="false" />
+        <revert-changes value="true" />
+        <exit-on-changes value="ASK" />
+      </confirmations>
+    </code-editor-settings>
+    <code-completion-settings>
+      <filters>
+        <basic-filter>
+          <filter-element type="RESERVED_WORD" id="keyword" selected="true" />
+          <filter-element type="RESERVED_WORD" id="function" selected="true" />
+          <filter-element type="RESERVED_WORD" id="parameter" selected="true" />
+          <filter-element type="RESERVED_WORD" id="datatype" selected="true" />
+          <filter-element type="RESERVED_WORD" id="exception" selected="true" />
+          <filter-element type="OBJECT" id="schema" selected="true" />
+          <filter-element type="OBJECT" id="role" selected="true" />
+          <filter-element type="OBJECT" id="user" selected="true" />
+          <filter-element type="OBJECT" id="privilege" selected="true" />
+          <user-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="false" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </user-schema>
+          <public-schema>
+            <filter-element type="OBJECT" id="table" selected="false" />
+            <filter-element type="OBJECT" id="view" selected="false" />
+            <filter-element type="OBJECT" id="materialized view" selected="false" />
+            <filter-element type="OBJECT" id="index" selected="false" />
+            <filter-element type="OBJECT" id="constraint" selected="false" />
+            <filter-element type="OBJECT" id="trigger" selected="false" />
+            <filter-element type="OBJECT" id="synonym" selected="false" />
+            <filter-element type="OBJECT" id="sequence" selected="false" />
+            <filter-element type="OBJECT" id="procedure" selected="false" />
+            <filter-element type="OBJECT" id="function" selected="false" />
+            <filter-element type="OBJECT" id="package" selected="false" />
+            <filter-element type="OBJECT" id="type" selected="false" />
+            <filter-element type="OBJECT" id="dimension" selected="false" />
+            <filter-element type="OBJECT" id="cluster" selected="false" />
+            <filter-element type="OBJECT" id="dblink" selected="false" />
+          </public-schema>
+          <any-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </any-schema>
+        </basic-filter>
+        <extended-filter>
+          <filter-element type="RESERVED_WORD" id="keyword" selected="true" />
+          <filter-element type="RESERVED_WORD" id="function" selected="true" />
+          <filter-element type="RESERVED_WORD" id="parameter" selected="true" />
+          <filter-element type="RESERVED_WORD" id="datatype" selected="true" />
+          <filter-element type="RESERVED_WORD" id="exception" selected="true" />
+          <filter-element type="OBJECT" id="schema" selected="true" />
+          <filter-element type="OBJECT" id="user" selected="true" />
+          <filter-element type="OBJECT" id="role" selected="true" />
+          <filter-element type="OBJECT" id="privilege" selected="true" />
+          <user-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </user-schema>
+          <public-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </public-schema>
+          <any-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </any-schema>
+        </extended-filter>
+      </filters>
+      <sorting enabled="true">
+        <sorting-element type="RESERVED_WORD" id="keyword" />
+        <sorting-element type="RESERVED_WORD" id="datatype" />
+        <sorting-element type="OBJECT" id="column" />
+        <sorting-element type="OBJECT" id="table" />
+        <sorting-element type="OBJECT" id="view" />
+        <sorting-element type="OBJECT" id="materialized view" />
+        <sorting-element type="OBJECT" id="index" />
+        <sorting-element type="OBJECT" id="constraint" />
+        <sorting-element type="OBJECT" id="trigger" />
+        <sorting-element type="OBJECT" id="synonym" />
+        <sorting-element type="OBJECT" id="sequence" />
+        <sorting-element type="OBJECT" id="procedure" />
+        <sorting-element type="OBJECT" id="function" />
+        <sorting-element type="OBJECT" id="package" />
+        <sorting-element type="OBJECT" id="type" />
+        <sorting-element type="OBJECT" id="dimension" />
+        <sorting-element type="OBJECT" id="cluster" />
+        <sorting-element type="OBJECT" id="dblink" />
+        <sorting-element type="OBJECT" id="schema" />
+        <sorting-element type="OBJECT" id="role" />
+        <sorting-element type="OBJECT" id="user" />
+        <sorting-element type="RESERVED_WORD" id="function" />
+        <sorting-element type="RESERVED_WORD" id="parameter" />
+      </sorting>
+      <format>
+        <enforce-code-style-case value="true" />
+      </format>
+    </code-completion-settings>
+    <execution-engine-settings>
+      <statement-execution>
+        <fetch-block-size value="100" />
+        <execution-timeout value="20" />
+        <debug-execution-timeout value="600" />
+        <focus-result value="false" />
+        <prompt-execution value="false" />
+      </statement-execution>
+      <script-execution>
+        <command-line-interfaces />
+        <execution-timeout value="300" />
+      </script-execution>
+      <method-execution>
+        <execution-timeout value="30" />
+        <debug-execution-timeout value="600" />
+        <parameter-history-size value="10" />
+      </method-execution>
+    </execution-engine-settings>
+    <operation-settings>
+      <transactions>
+        <uncommitted-changes>
+          <on-project-close value="ASK" />
+          <on-disconnect value="ASK" />
+          <on-autocommit-toggle value="ASK" />
+        </uncommitted-changes>
+        <multiple-uncommitted-changes>
+          <on-commit value="ASK" />
+          <on-rollback value="ASK" />
+        </multiple-uncommitted-changes>
+      </transactions>
+      <session-browser>
+        <disconnect-session value="ASK" />
+        <kill-session value="ASK" />
+        <reload-on-filter-change value="false" />
+      </session-browser>
+      <compiler>
+        <compile-type value="KEEP" />
+        <compile-dependencies value="ASK" />
+        <always-show-controls value="false" />
+      </compiler>
+      <debugger>
+        <debugger-type value="JDBC" />
+      </debugger>
+    </operation-settings>
+    <ddl-file-settings>
+      <extensions>
+        <mapping file-type-id="VIEW" extensions="vw" />
+        <mapping file-type-id="TRIGGER" extensions="trg" />
+        <mapping file-type-id="PROCEDURE" extensions="prc" />
+        <mapping file-type-id="FUNCTION" extensions="fnc" />
+        <mapping file-type-id="PACKAGE" extensions="pkg" />
+        <mapping file-type-id="PACKAGE_SPEC" extensions="pks" />
+        <mapping file-type-id="PACKAGE_BODY" extensions="pkb" />
+        <mapping file-type-id="TYPE" extensions="tpe" />
+        <mapping file-type-id="TYPE_SPEC" extensions="tps" />
+        <mapping file-type-id="TYPE_BODY" extensions="tpb" />
+      </extensions>
+      <general>
+        <lookup-ddl-files value="true" />
+        <create-ddl-files value="false" />
+        <synchronize-ddl-files value="true" />
+        <use-qualified-names value="false" />
+        <make-scripts-rerunnable value="true" />
+      </general>
+    </ddl-file-settings>
+    <general-settings>
+      <regional-settings>
+        <date-format value="MEDIUM" />
+        <number-format value="UNGROUPED" />
+        <locale value="SYSTEM_DEFAULT" />
+        <use-custom-formats value="false" />
+      </regional-settings>
+      <environment>
+        <environment-types>
+          <environment-type id="development" name="Development" description="Development environment" color="-2430209/-12296320" readonly-code="false" readonly-data="false" />
+          <environment-type id="integration" name="Integration" description="Integration environment" color="-2621494/-12163514" readonly-code="true" readonly-data="false" />
+          <environment-type id="production" name="Production" description="Productive environment" color="-11574/-10271420" readonly-code="true" readonly-data="true" />
+          <environment-type id="other" name="Other" description="" color="-1576/-10724543" readonly-code="false" readonly-data="false" />
+        </environment-types>
+        <visibility-settings>
+          <connection-tabs value="true" />
+          <dialog-headers value="true" />
+          <object-editor-tabs value="true" />
+          <script-editor-tabs value="false" />
+          <execution-result-tabs value="true" />
+        </visibility-settings>
+      </environment>
+    </general-settings>
+  </component>
+</project>
\ No newline at end of file
diff --git a/myproject/myproject/__init__.py b/myproject/myproject/__init__.py
deleted file mode 100644
diff --git a/myproject/myapp/__init__.py b/myproject/myapp/__init__.py
deleted file mode 100644
diff --git a/myproject/myapp/migrations/__init__.py b/myproject/myapp/migrations/__init__.py
deleted file mode 100644
